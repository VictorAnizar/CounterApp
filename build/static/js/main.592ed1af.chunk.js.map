{"version":3,"sources":["App.js","reportWebVitals.js","components/CounterApp.js","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","CounterApp","value","useState","counter","setCounter","useEffect","Button","variant","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NAWeA,ICCAC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,eC+CCQ,EAhDI,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClB,EAA8BC,mBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAEAC,qBAAU,WACND,EAAWH,KACZ,IAcH,OACI,gCACI,4CACA,6BAAKE,IAEL,cAACG,EAAA,EAAD,CACIC,QAAQ,WACRC,QAnBU,WAClBJ,EAAWD,EAAU,IAgBjB,sBAKA,cAACG,EAAA,EAAD,CACIC,QAAQ,WACRC,QApBW,WACnBJ,EAAWD,EAAU,IAiBjB,qBAKA,cAACG,EAAA,EAAD,CACIC,QAAQ,WACRC,QArBY,WACpBJ,EAAWH,IAkBP,2BCjCZQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAYV,MAAO,MAErBW,SAASC,eAAe,SAM1BtB,M","file":"static/js/main.592ed1af.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nfunction App() {\n  return (\n    <>\n      <p>Hola</p>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n//material\r\nimport Button from '@mui/material/Button';\r\n\r\n\r\nconst CounterApp = ({ value }) => {\r\n    const [counter, setCounter] = useState(0);\r\n\r\n    useEffect(() => {\r\n        setCounter(value)\r\n    }, [])\r\n\r\n    const handleClicAdd = () => {\r\n        setCounter(counter + 1)\r\n    }\r\n\r\n    const handleClicLess = () => {\r\n        setCounter(counter - 1)\r\n    }\r\n\r\n    const handleClicReset = () => {\r\n        setCounter(value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>CounterApp</h1>\r\n            <h2>{counter}</h2>\r\n\r\n            <Button\r\n                variant=\"outlined\"\r\n                onClick={handleClicAdd}\r\n            >Aumentar</Button>\r\n\r\n            <Button\r\n                variant=\"outlined\"\r\n                onClick={handleClicLess}\r\n            >Reducir</Button>\r\n\r\n            <Button\r\n                variant=\"outlined\"\r\n                onClick={handleClicReset}\r\n            >Reiniciar</Button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nCounterApp.propTypes = {\r\n    value: PropTypes.number\r\n}\r\n\r\nexport default CounterApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport CounterApp from './components/CounterApp';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CounterApp value={7}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}